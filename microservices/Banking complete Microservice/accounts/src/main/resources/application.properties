spring.application.name=accounts
spring.profiles.active=prod
spring.config.import=optional:configserver:http://localhost:8071

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update

server.port=8080

management.endpoints.web.exposure.include=*

eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/


## Configuring info endpoint
info.app.name=Accounts Microservice
info.app.description=Accounts Application
info.app.version=1.0.0

#register logs of the circuitbreaker in the actuator
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
#number of requests to monitor for the invocation of circuit breaker based on threshold below
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.minimumNumberOfCalls= 5
#percentage of the amount above which needs to open circuitbreaker (in this case
# 50% of 5=3 requests to open it)
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.failureRateThreshold= 50
#how muck time to go to half open state
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.waitDurationInOpenState= 30000
#how many requests in half open, based on minimumNumberOfCalls (50% of 2=1),
# if fails will return to open and if requests work it will close circuit break
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.permittedNumberOfCallsInHalfOpenState=2


#resilience4j.retry.configs.default.registerHealthIndicator= true
#how many retries (if 2 is choosen for example, 3 tries will be made)
resilience4j.retry.instances.retryForCustomerDetails.max-attempts=2
#duration between attempts
resilience4j.retry.instances.retryForCustomerDetails.waitDuration=2000

resilience4j.ratelimiter.configs.default.registerHealthIndicator= true
resilience4j.ratelimiter.instances.sayHello.timeoutDuration=5000
resilience4j.ratelimiter.instances.sayHello.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.sayHello.limitForPeriod=1

logging.level.com.sylleryum=debug

#percentage of logs sent to zipkin, from 0 to 1
spring.sleuth.sampler.percentage=1
spring.zipkin.baseUrl=http://localhost:9411/

#spring.zipkin.sender.type=rabbit
#spring.zipkin.rabbitmq.queue=zipkin
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest